PORT=3000
EMAIL_PORT=2525
JWT_EXPIRES_IN='90d'
COOKIE_EXPIRES_IN=90
NODE_ENV=development
# NODE_ENV=production
EMAIL_PASSWORD=ba21a92e94a1cc
EMAIL_USERNAME=9b6d7974cfbf01
EMAIL_HOST=sandbox.smtp.mailtrap.io
DB_URL=mongodb+srv://ahmedosamaalsawah:Ag2jOWQdxqEGPhj5@cluster0.t8fpcix.mongodb.net/natours?retryWrites=true&w=majority
JWT_SECRET=secure-secret-most-ever-be-this-will-the




# I'm on a project right now for a law company, and in the step of writing the DB models using node, these models are as follows:
# 1) Expense Type: 
# - id: _id
# - name: Will be a string

# 2) Expense: Will be for any expense process happens, the number of the expense as COST, and the type of it as EXTYPE, and the date of the process as DATE.
# - id: _id
# - exType: ObjectId refer to the Expense Type model
# - cost: will be Number of the total expense the company spent
# - date: will be the Date of any expense process no matter if it was withdraw or deposit
# ------
# also if you can suggess the endpoints for the CRUD operations that we can do with these Scemas for the Expense:
# For the expenses, Admin should be able to:
# > Display the expenses in a table and each row will contain:
# - Type of the expenses
# - Display the month and year
# - Display the amount
# > Button to adjust
# > Button to delete
# > Display the types of the expenses with the ability to modify, delete, and add a new expense type


# I am on a project right now for a law company, and I am in the step of writing the DB models using nodeJS.
# Expense and Expense Type Scemas will be as follows:
# 1) Expense Type:
# - id: _id
# - name: Will be a STRING, that descripes the type of the expense

# 2) Expense:
# - id: _id
# - exType: ObjectId refers to the Expense Type model/schema
# - cost: will be the Number of the expense cost
# - date: will be the Date of the expense proccess
# ------
# The Admin should be able to manage these expenses as follows: 
# > Add button to CREATE a new expense 
# > Edit button to UPDATE any expense
# > Delete button to DELETE any expense
# > Display button to READ the any expense (it should be displayed as a table, with the following rows):
# - the Type of the expense
# - the Date of the expense
# - the Cost of the expense

# So you should suggesst an endpoint name for each of these CRUD operations features. 